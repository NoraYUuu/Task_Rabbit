// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.viewbinding.ViewBinding;
import com.example.myapplication.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateNewTaskBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText TaskDetails;

  @NonNull
  public final LinearLayout containerCreateTask;

  @NonNull
  public final TextInputLayout editAddress;

  @NonNull
  public final TextInputLayout editDate;

  @NonNull
  public final TextInputLayout editTaskDetails;

  @NonNull
  public final ImageView editTaskPhoto;

  @NonNull
  public final Button editTaskSavebtn;

  @NonNull
  public final TextInputLayout editTaskTitle;

  @NonNull
  public final TextInputEditText editTextDate;

  @NonNull
  public final TextInputEditText editTextTime;

  @NonNull
  public final TextInputLayout editTime;

  @NonNull
  public final TextInputEditText location;

  @NonNull
  public final ScrollView scrollTC;

  @NonNull
  public final AppCompatSpinner spinner;

  private ActivityCreateNewTaskBinding(@NonNull ScrollView rootView,
      @NonNull TextInputEditText TaskDetails, @NonNull LinearLayout containerCreateTask,
      @NonNull TextInputLayout editAddress, @NonNull TextInputLayout editDate,
      @NonNull TextInputLayout editTaskDetails, @NonNull ImageView editTaskPhoto,
      @NonNull Button editTaskSavebtn, @NonNull TextInputLayout editTaskTitle,
      @NonNull TextInputEditText editTextDate, @NonNull TextInputEditText editTextTime,
      @NonNull TextInputLayout editTime, @NonNull TextInputEditText location,
      @NonNull ScrollView scrollTC, @NonNull AppCompatSpinner spinner) {
    this.rootView = rootView;
    this.TaskDetails = TaskDetails;
    this.containerCreateTask = containerCreateTask;
    this.editAddress = editAddress;
    this.editDate = editDate;
    this.editTaskDetails = editTaskDetails;
    this.editTaskPhoto = editTaskPhoto;
    this.editTaskSavebtn = editTaskSavebtn;
    this.editTaskTitle = editTaskTitle;
    this.editTextDate = editTextDate;
    this.editTextTime = editTextTime;
    this.editTime = editTime;
    this.location = location;
    this.scrollTC = scrollTC;
    this.spinner = spinner;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateNewTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateNewTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_new_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateNewTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TaskDetails;
      TextInputEditText TaskDetails = rootView.findViewById(id);
      if (TaskDetails == null) {
        break missingId;
      }

      id = R.id.containerCreateTask;
      LinearLayout containerCreateTask = rootView.findViewById(id);
      if (containerCreateTask == null) {
        break missingId;
      }

      id = R.id.editAddress;
      TextInputLayout editAddress = rootView.findViewById(id);
      if (editAddress == null) {
        break missingId;
      }

      id = R.id.editDate;
      TextInputLayout editDate = rootView.findViewById(id);
      if (editDate == null) {
        break missingId;
      }

      id = R.id.editTaskDetails;
      TextInputLayout editTaskDetails = rootView.findViewById(id);
      if (editTaskDetails == null) {
        break missingId;
      }

      id = R.id.editTaskPhoto;
      ImageView editTaskPhoto = rootView.findViewById(id);
      if (editTaskPhoto == null) {
        break missingId;
      }

      id = R.id.editTaskSavebtn;
      Button editTaskSavebtn = rootView.findViewById(id);
      if (editTaskSavebtn == null) {
        break missingId;
      }

      id = R.id.editTaskTitle;
      TextInputLayout editTaskTitle = rootView.findViewById(id);
      if (editTaskTitle == null) {
        break missingId;
      }

      id = R.id.editTextDate;
      TextInputEditText editTextDate = rootView.findViewById(id);
      if (editTextDate == null) {
        break missingId;
      }

      id = R.id.editTextTime;
      TextInputEditText editTextTime = rootView.findViewById(id);
      if (editTextTime == null) {
        break missingId;
      }

      id = R.id.editTime;
      TextInputLayout editTime = rootView.findViewById(id);
      if (editTime == null) {
        break missingId;
      }

      id = R.id.location;
      TextInputEditText location = rootView.findViewById(id);
      if (location == null) {
        break missingId;
      }

      ScrollView scrollTC = (ScrollView) rootView;

      id = R.id.spinner;
      AppCompatSpinner spinner = rootView.findViewById(id);
      if (spinner == null) {
        break missingId;
      }

      return new ActivityCreateNewTaskBinding((ScrollView) rootView, TaskDetails,
          containerCreateTask, editAddress, editDate, editTaskDetails, editTaskPhoto,
          editTaskSavebtn, editTaskTitle, editTextDate, editTextTime, editTime, location, scrollTC,
          spinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
