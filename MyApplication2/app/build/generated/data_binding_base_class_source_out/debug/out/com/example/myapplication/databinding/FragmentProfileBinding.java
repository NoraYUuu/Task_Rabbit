// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.myapplication.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final LinearLayout containerCreateTask;

  @NonNull
  public final TextInputLayout editPhone;

  @NonNull
  public final CircleImageView editPhoto;

  @NonNull
  public final TextInputEditText editTextPhone;

  @NonNull
  public final TextInputEditText editTextUsername;

  @NonNull
  public final TextInputLayout editUsername;

  @NonNull
  public final MaterialButton save;

  private FragmentProfileBinding(@NonNull ScrollView rootView,
      @NonNull LinearLayout containerCreateTask, @NonNull TextInputLayout editPhone,
      @NonNull CircleImageView editPhoto, @NonNull TextInputEditText editTextPhone,
      @NonNull TextInputEditText editTextUsername, @NonNull TextInputLayout editUsername,
      @NonNull MaterialButton save) {
    this.rootView = rootView;
    this.containerCreateTask = containerCreateTask;
    this.editPhone = editPhone;
    this.editPhoto = editPhoto;
    this.editTextPhone = editTextPhone;
    this.editTextUsername = editTextUsername;
    this.editUsername = editUsername;
    this.save = save;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.containerCreateTask;
      LinearLayout containerCreateTask = rootView.findViewById(id);
      if (containerCreateTask == null) {
        break missingId;
      }

      id = R.id.editPhone;
      TextInputLayout editPhone = rootView.findViewById(id);
      if (editPhone == null) {
        break missingId;
      }

      id = R.id.editPhoto;
      CircleImageView editPhoto = rootView.findViewById(id);
      if (editPhoto == null) {
        break missingId;
      }

      id = R.id.editTextPhone;
      TextInputEditText editTextPhone = rootView.findViewById(id);
      if (editTextPhone == null) {
        break missingId;
      }

      id = R.id.editTextUsername;
      TextInputEditText editTextUsername = rootView.findViewById(id);
      if (editTextUsername == null) {
        break missingId;
      }

      id = R.id.editUsername;
      TextInputLayout editUsername = rootView.findViewById(id);
      if (editUsername == null) {
        break missingId;
      }

      id = R.id.save;
      MaterialButton save = rootView.findViewById(id);
      if (save == null) {
        break missingId;
      }

      return new FragmentProfileBinding((ScrollView) rootView, containerCreateTask, editPhone,
          editPhoto, editTextPhone, editTextUsername, editUsername, save);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
