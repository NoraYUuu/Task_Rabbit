// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RatingBar;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager2.widget.ViewPager2;
import com.example.myapplication.R;
import com.google.android.material.tabs.TabItem;
import com.google.android.material.tabs.TabLayout;
import com.google.android.material.textview.MaterialTextView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileViewBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ViewPager2 pager;

  @NonNull
  public final TabLayout reviewtabs;

  @NonNull
  public final TabItem tasksMine;

  @NonNull
  public final TabItem tasksOther;

  @NonNull
  public final RatingBar viewBar;

  @NonNull
  public final MaterialTextView viewRating;

  @NonNull
  public final MaterialTextView viewname;

  @NonNull
  public final CircleImageView viewphoto;

  private FragmentProfileViewBinding(@NonNull ScrollView rootView, @NonNull ViewPager2 pager,
      @NonNull TabLayout reviewtabs, @NonNull TabItem tasksMine, @NonNull TabItem tasksOther,
      @NonNull RatingBar viewBar, @NonNull MaterialTextView viewRating,
      @NonNull MaterialTextView viewname, @NonNull CircleImageView viewphoto) {
    this.rootView = rootView;
    this.pager = pager;
    this.reviewtabs = reviewtabs;
    this.tasksMine = tasksMine;
    this.tasksOther = tasksOther;
    this.viewBar = viewBar;
    this.viewRating = viewRating;
    this.viewname = viewname;
    this.viewphoto = viewphoto;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pager;
      ViewPager2 pager = rootView.findViewById(id);
      if (pager == null) {
        break missingId;
      }

      id = R.id.reviewtabs;
      TabLayout reviewtabs = rootView.findViewById(id);
      if (reviewtabs == null) {
        break missingId;
      }

      id = R.id.tasks_mine;
      TabItem tasksMine = rootView.findViewById(id);
      if (tasksMine == null) {
        break missingId;
      }

      id = R.id.tasks_other;
      TabItem tasksOther = rootView.findViewById(id);
      if (tasksOther == null) {
        break missingId;
      }

      id = R.id.view_bar;
      RatingBar viewBar = rootView.findViewById(id);
      if (viewBar == null) {
        break missingId;
      }

      id = R.id.view_rating;
      MaterialTextView viewRating = rootView.findViewById(id);
      if (viewRating == null) {
        break missingId;
      }

      id = R.id.viewname;
      MaterialTextView viewname = rootView.findViewById(id);
      if (viewname == null) {
        break missingId;
      }

      id = R.id.viewphoto;
      CircleImageView viewphoto = rootView.findViewById(id);
      if (viewphoto == null) {
        break missingId;
      }

      return new FragmentProfileViewBinding((ScrollView) rootView, pager, reviewtabs, tasksMine,
          tasksOther, viewBar, viewRating, viewname, viewphoto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
